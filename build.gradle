/*
 * Copyright (C) 2014 Antew
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    repositories {
        mavenCentral()
    }

  dependencies {
      classpath 'com.android.tools.build:gradle:0.12.+'
      classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.12.+'
      classpath 'me.tatarka:gradle-retrolambda:2.1.0'
  }
}

apply plugin: 'android-sdk-manager'
apply plugin: 'android'
apply plugin: 'retrolambda'

android {
    compileSdkVersion 19
    buildToolsVersion '19.1.0'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
        versionName "3.1.6"
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    productFlavors {
        free {
            applicationId "com.wemakestuff.redditinpictures"
            versionCode 25
        }

        pro {
            applicationId "com.wemakestuff.redditinpictures.pro"
            versionCode 25
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.commonsware.com.s3.amazonaws.com' }
    flatDir { dirs 'lib' }
}

dependencies {
    compile 'com.google.code.gson:gson:2.2.+'
    compile 'net.simonvt.menudrawer:menudrawer:3.0.+@aar'
    compile 'com.android.support:support-v4:19.1.+'
    compile 'com.android.support:support-v13:19.1.+'
    compile 'com.jakewharton:butterknife:5.1.+'
    compile 'com.squareup.picasso:picasso:2.3.+'
    compile 'com.squareup.okhttp:okhttp:2.0.+'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.+'
    compile 'com.squareup.dagger:dagger:1.2.+'
    compile 'com.squareup.dagger:dagger-compiler:1.2.+'
    compile 'com.squareup:otto:1.3.+'
    compile 'com.github.castorflex.smoothprogressbar:library:0.5.+'
    compile 'com.github.chrisbanes.photoview:photoview-library:1.2.+@aar'
    compile 'com.netflix.rxjava:rxjava-android:0.19.6'
    compile 'com.squareup.retrofit:retrofit:1.6.+'
    compile 'com.sothree.slidinguppanel:library:2.0.+'
    compile 'com.commonsware.cwac:anddown:0.2.0'
    compile files('lib/libGoogleAnalyticsServices.jar')
    freeCompile files('lib/admob-6.2.1.jar')
}

def hasValidSigningConfig = project.hasProperty('storeFile') &&
                            project.hasProperty('storePassword') &&
                            project.hasProperty('keyAlias') &&
                            project.hasProperty('keyPassword')

if (hasValidSigningConfig) {
    android.signingConfigs.release.storeFile = file(storeFile)
    android.signingConfigs.release.storePassword = storePassword
    android.signingConfigs.release.keyAlias = keyAlias
    android.signingConfigs.release.keyPassword = keyPassword
} else {
    android.buildTypes.release.signingConfig = null
}